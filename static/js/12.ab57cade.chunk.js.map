{"version":3,"file":"static/js/12.ab57cade.chunk.js","mappings":"qNA4DA,IAAMA,EAAUC,EAAAA,GAAAA,IAAH,o9BAoDPC,EAAoBD,EAAAA,GAAAA,IAAH,kFAMvB,UA7GA,WACE,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,aAClBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRH,EAAaR,GAASY,MAAK,SAACC,GAAD,OAAST,EAASS,EAAI,GAAtB,GAC5B,GAAE,CAACb,IAEJ,IA0BMc,EAtBc,WAClB,OACE,UAACjB,EAAD,YACE,gBAAKkB,UAAU,QAAf,UACE,gBAAKC,IAAKb,EAAMc,UAAWC,IAAKf,EAAMgB,WAExC,iBAAKJ,UAAU,OAAf,WACE,wBAAKZ,EAAMgB,SACX,cAAGJ,UAAU,cAAb,SACGZ,EAAMiB,aAbIC,EAasBlB,EAAMiB,YAZxCC,EAAIC,QAAQ,kBAAmB,KAYwB,QAExD,cAAGP,UAAU,YAAb,SAA0BZ,EAAMoB,aAChC,cAAGR,UAAU,WAAb,SAAyBZ,EAAMqB,YAC/B,wBAAKrB,EAAMsB,YAEjB,gBAAKV,UAAU,OAAf,UACD,gBAAKW,QAAS,kBAAMjB,GAAU,EAAhB,EAAd,8BApBmB,IAACY,CAwBpB,CAEYM,GAEPC,GAASC,EAAAA,EAAAA,UAAQ,kBAAOvB,GAAQ,SAACP,EAAD,WAAmB,SAAC,IAAD,MAAiC,IAAnE,GAA0E,CAACO,IAC5FwB,GAAWD,EAAAA,EAAAA,UAAQ,kBAAOtB,GAAU,SAACR,EAAD,WAAmB,SAAC,IAAD,MAAkC,IAAtE,GAA6E,CAACQ,IACjGwB,EAAczB,GAASC,GAAWJ,IAAU,GAAK,KAAOW,EAC9D,OACE,iCACF,SAAC,IAAD,IACKc,EACAG,EACAD,IAGN,C","sources":["components/pages/Comic.jsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useState, useMemo } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport useMarvelService from \"../../services/marvelService\";\r\nimport styled from \"styled-components\";\r\nimport Error from \"../Error\";\r\nimport Spinner from \"../Spinner\";\r\nimport Ads from \"../Ads\";\r\n\r\nfunction Comic() {\r\n  const { comicId } = useParams();\r\n  const [comic, setComic] = useState([]);\r\n  const { error, loading, getComicById } = useMarvelService();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getComicById(comicId).then((res) => setComic(res[0]));\r\n  }, [comicId]);\r\n\r\n  const clearString = (str) => {\r\n    return str.replace(/<\\/?[^>]+(>|$)/g, \"\");\r\n  };\r\n\r\n  const renderItems = () => {\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"image\">\r\n          <img src={comic.thumbnail} alt={comic.title} />\r\n        </div>\r\n        <div className=\"info\">\r\n          <h2>{comic.title}</h2>\r\n          <p className=\"description\">\r\n            {comic.description ? clearString(comic.description) : \"NO\"}\r\n          </p>\r\n          <p className=\"pageCount\">{comic.pageCount}</p>\r\n          <p className=\"language\">{comic.language}</p>\r\n          <h3>{comic.price}</h3>\r\n        </div>\r\n\t\t  <div className=\"back\"> \r\n\t\t\t<div onClick={() => navigate(-1)}>Back to all</div>\r\n\t\t  </div>\r\n      </Wrapper>\r\n    );\r\n  };\r\n\r\n  const test = renderItems()\r\n\r\n  const _error = useMemo(() => (error ? <AdditionalWrapper><Error /></AdditionalWrapper>  : null), [error]);\r\n  const _loading = useMemo(() => (loading ? <AdditionalWrapper><Spinner /></AdditionalWrapper> : null), [loading]);\r\n  const _contents = ( error || loading || comic === [] ? null : test);\r\n  return (\r\n    <>\r\n\t\t<Ads/>\r\n      {_error}\r\n      {_contents}\r\n      {_loading}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  width: 100%;\r\n  img {\r\n    width: 293px;\r\n    max-height: 450px;\r\n    margin-right: 50px;\r\n\t  flex-grow: 0;\r\n  }\r\n  .info {\r\n    font-family: \"Roboto Condensed\";\r\n    color: #000000;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n\t flex-grow: 1;\r\n\t max-width: 650px;\r\n    h2 {\r\n      font-weight: 700;\r\n      font-size: 22px;\r\n      line-height: 26px;\r\n      margin-bottom: 25px;\r\n    }\r\n    h3 {\r\n      font-weight: 700;\r\n      font-size: 24px;\r\n      line-height: 28px;\r\n      color: #9f0013;\r\n    }\r\n    .description {\r\n      margin-bottom: 25px;\r\n    }\r\n    .language {\r\n      margin-bottom: 25px;\r\n    }\r\n    .pageCount {\r\n      margin-bottom: 25px;\r\n    }\r\n  }\r\n\t.back {\r\n\t\twidth: 150px;\r\n\t\ttext-align: end;\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 18px;\r\n\t\tline-height: 21px;\r\n\t\tfont-family: 'Roboto Condensed';\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nconst AdditionalWrapper = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n`;\r\n\r\nexport default Comic;\r\n"],"names":["Wrapper","styled","AdditionalWrapper","comicId","useParams","useState","comic","setComic","useMarvelService","error","loading","getComicById","navigate","useNavigate","useEffect","then","res","test","className","src","thumbnail","alt","title","description","str","replace","pageCount","language","price","onClick","renderItems","_error","useMemo","_loading","_contents"],"sourceRoot":""}